##
#
# This file contains parameters for an example where a single jaco arm pushes a
# box. 
#
##

# Initial state
q_init : [1.57, 1.7, 0.0, 4.8, 0.0, 4.5, 0.0,   # arm positions
          1.0, 0.0, 0.0, 0.0,                  # box orientation
          0.45, 0.0, 0.09]                       # box position
v_init : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

# Target state
q_nom_start : [1.57, 1.7, 0.0, 4.8, 0.0, 4.5, 0.0,
               0.7, 0.7, 0.0, 0.0,
               0.5,-0.1, 0.08]
q_nom_end : [1.57, 1.7, 0.0, 4.8, 0.0, 4.5, 0.0,
             0.7, 0.7, 0.0, 0.0,
             0.5,-0.1, 0.08]

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_guess.
q_guess : [1.57, 1.7, 0.0, 4.8, 0.0, 4.5, 0.0,
           1.0, 0.0, 0.0, 0.0,
           0.5, 0.1, 0.08]

# Cost Weights
Qq: [1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2,
     1e1, 1e1, 1e1, 1e1,
     1e1, 1e1, 1e1]
Qv: [1e-1, 1e-1, 1e-1, 1e-1, 1e-1, 1e-1, 1e-1,
     1e-2, 1e-2, 1e-2,
     1e-2, 1e-2, 1e-2]
R: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
    1e2, 1e2, 1e2,
    1e2, 1e2, 1e2]

Qfq: [1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2,
      1e1, 1e1, 1e1, 1e1,
      1e1, 1e1, 1e1]
Qfv: [1e-1, 1e-1, 1e-1, 1e-1, 1e-1, 1e-1, 1e-1,
      1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2]

# Problem definition parameters
time_step : 0.05    # Discretization timestep (seconds)
num_steps : 20      # number of timesteps

# Solver parameters
max_iters : 50              # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
scaling : true
equality_constraints : true
num_threads : 4

tolerances:
  rel_cost_reduction: 0
  abs_cost_reduction: 0
  rel_gradient_along_dq: 0
  abs_gradient_along_dq: 0
  rel_state_change: 0
  abs_state_change: 0

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "forward_differences"

# Playback/visualization parameters
play_target_trajectory : false
play_initial_guess : false
play_optimal_trajectory : true

# Debugging parameters
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : true

# Contact model parameters. 
contact_stiffness : 10     # normal force stiffness, in N/m
dissipation_velocity : 0.1  # Hunt & Crossley-like model parameter, in m/s.

# Amount of smoothing (and therefore force at a distance) to apply when
# computing normal forces. This is equivalent to an analytical version of
# randomized smoothing, assuming that signed distances are drawn from a logistic
# distirbution with the smoothing factor as the scale parameter. Higher values
# mean more smoothing and more force at a distance. 
smoothing_factor : 0.0001

# Friction
friction_coefficient : 0.5  # Coefficient of friction.
stiction_velocity: 0.05     # Regularization velocity, in m/s.

# MPC parameters
mpc : true
mpc_iters : 1
controller_frequency : 20
sim_time : 15
sim_time_step : 5e-3
sim_realtime_rate : 0.0

feed_forward : false
Kp: [500, 500, 250, 500, 250, 250, 250,
     0, 0, 0, 0, 0, 0, 0]
Kd: [50, 50, 25, 50, 25, 25, 25,
     0, 0, 0, 0, 0, 0]

save_mpc_result_as_static_html: true
static_html_filename: "/home/manabunishiura/idto/results.html"
